{"version":3,"sources":["images/icon-moon.svg","images/icon-sun.svg","images/icon-cross.svg","components/Header/Header.js","components/Button/Button.js","components/Form/ToDoForm.js","components/ToDoList/ToDoItem/ToDoItem.js","components/ToDoList/ListButtons/ListButtons.js","components/ToDoList/ToDoList.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","switchTheme","theme","react_default","a","createElement","className","onClick","src","moon","sun","alt","Button","props","type","onCompleteHandler","ToDoForm","onListHandler","_useState","useState","_useState2","Object","slicedToArray","text","setText","onSubmit","e","preventDefault","todo","completed","id","Math","random","toString","Button_Button","value","onChange","target","placeholder","ToDoItem","index","setToDoList","filtred","removeItem","prev","filter","item","completeHandler","map","objectSpread","react_beautiful_dnd_esm","key","draggableId","provided","snapshot","assign","concat","isDragging","draggableProps","dragHandleProps","ref","innerRef","name","checked","cross","ListButtons","toDoList","setStatus","deleteCompletedHandler","count","setCount","useEffect","length","filterTasks","dataset","data-filter","ToDoList","status","toConsumableArray","task","droppableId","isDraggingOver","droppableProps","ToDoList_ToDoItem_ToDoItem","ToDoList_ListButtons_ListButtons","getTasks","tasks","localStorage","getItem","JSON","parse","App","_useState3","_useState4","setItem","stringify","defaultDark","window","matchMedia","matches","_useLocalStorage","useLocalStorage","_useLocalStorage2","setTheme","data-theme","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","reorderedItem","Header_Header","components_Form_ToDoForm","enteredText","ToDoList_ToDoList","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c922e2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-moon.e66b8c62.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-sun.b3182f3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-cross.fe68d57f.svg\";","import React from 'react'\r\nimport './Header.css'\r\nimport moon from '../../images/icon-moon.svg'\r\nimport sun from '../../images/icon-sun.svg'\r\n\r\nexport default function Header({ switchTheme, theme }) {\r\n   return (\r\n    <header className='header'>\r\n      <h1>Todo</h1>\r\n      <button className='header_btn' onClick={switchTheme}>\r\n        <img src={theme === 'light' ? moon : sun} alt='moon' />\r\n      </button>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default function Button(props) {\r\n  // const classes = 'btn-sbm' || '';\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      className={props.className}\r\n      onClick={props.onCompleteHandler}\r\n    ></button>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport { useState } from \"react\";\r\nimport \"./ToDoForm.css\";\r\n\r\nconst ToDoForm = ({ onListHandler }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  //submiting input text as todo\r\n  const textSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const todo = {\r\n      text: text,\r\n      completed: false,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    onListHandler(todo);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo_container\" onSubmit={textSubmitHandler}>\r\n      <Button type={\"\" || \"submit\"} className={\"\" || \"btn-sbm\"} />\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Create a new todo...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default ToDoForm;\r\n","import React from \"react\";\r\nimport \"./ToDoItem.css\";\r\nimport cross from \"../../../images/icon-cross.svg\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst ToDoItem = ({ text, index, todo, setToDoList, filtred }) => {\r\n  const removeItem = () => {\r\n    setToDoList((prev) => {\r\n      let newToDos = prev.filter((item) => item.id !== todo.id);\r\n      return newToDos;\r\n    });\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setToDoList(\r\n      filtred.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return { ...item, completed: !item.completed };\r\n        }\r\n\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Draggable key={todo.id} draggableId={todo.id} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          className={`todo ${snapshot.isDragging ? \"drag\" : \"\"}`}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"checkbox\"\r\n            checked={todo.completed}\r\n            onChange={completeHandler}\r\n          />\r\n          <label>\r\n            <li className={`todo_item ${todo.completed ? \"completed\" : \"\"}`}>\r\n              {text}\r\n            </li>\r\n          </label>\r\n          <button className=\"trash-btn\" onClick={removeItem}>\r\n            <img src={cross} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport \"./ListButtons.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ListButtons = ({ toDoList, setStatus, deleteCompletedHandler }) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const completed = toDoList.filter((item) => item.completed).length;\r\n\r\n    setCount(toDoList.length - completed);\r\n  }, [toDoList]);\r\n\r\n  const filterTasks = (e) => {\r\n    setStatus(e.target.dataset[\"filter\"]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <p>\r\n        <span>{count}</span> items left\r\n      </p>\r\n      <div>\r\n        <button\r\n          className=\"list_btns list_btn--all\"\r\n          data-filter=\"all\"\r\n          onClick={filterTasks}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          className=\"list_btns list_btn--active\"\r\n          data-filter=\"active\"\r\n          onClick={filterTasks}\r\n        >\r\n          Active\r\n        </button>\r\n        <button\r\n          className=\"list_btns list_btn--completed\"\r\n          data-filter=\"completed\"\r\n          onClick={filterTasks}\r\n        >\r\n          Completed\r\n        </button>\r\n      </div>\r\n      <button\r\n        className=\"list_btns list_btn--clear\"\r\n        onClick={deleteCompletedHandler}\r\n      >\r\n        Clear completed\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport \"./ToDoList.css\";\r\n\r\nexport default function ToDoList({ toDoList, setToDoList, status, setStatus }) {\r\n  let filtred = [...toDoList];\r\n\r\n  switch (status) {\r\n    case \"all\":\r\n      filtred = [...toDoList];\r\n      break;\r\n    case \"completed\":\r\n      filtred = toDoList.filter((task) => task.completed);\r\n      break;\r\n    case \"active\":\r\n      filtred = toDoList.filter((task) => !task.completed);\r\n      break;\r\n    default:\r\n      filtred = [...toDoList];\r\n  }\r\n\r\n  const deleteCompletedHandler = () => {\r\n    const completed = filtred.filter((item) => !item.completed);\r\n    setToDoList(completed);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todos_list\">\r\n      <Droppable droppableId=\"ToDoList\">\r\n        {(provided, snapshot) => (\r\n          <ul\r\n            className={`todo_list ${\r\n              snapshot.isDraggingOver ? \"dragactive\" : \"\"\r\n            }`}\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n          >\r\n            {filtred.map((todo, index) => {\r\n              return (\r\n                <ToDoItem\r\n                  key={todo.id}\r\n                  index={index}\r\n                  todo={todo}\r\n                  setToDoList={setToDoList}\r\n                  filtred={filtred}\r\n                  text={todo.text}\r\n                />\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n\r\n      <ListButtons\r\n        toDoList={toDoList}\r\n        setStatus={setStatus}\r\n        deleteCompletedHandler={deleteCompletedHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport ToDoForm from \"./components/Form/ToDoForm\";\nimport ToDoList from \"./components/ToDoList/ToDoList\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport useLocalStorage from \"use-local-storage\";\n\nimport \"./App.css\";\n\nconst getTasks = () => {\n  const tasks = localStorage.getItem(\"toDoList\");\n  return tasks ? JSON.parse(tasks) : [];\n};\n\nfunction App() {\n  const [toDoList, setToDoList] = useState(getTasks());\n  // const [toDoList, setToDoList] = useState([])\n  const [status, setStatus] = useState(\"all\");\n\n  //storing todos in localstorage\n  useEffect(() => {\n    localStorage.setItem(\"toDoList\", JSON.stringify(toDoList));\n  }, [toDoList]);\n\n  //setting dark theme\n  const defaultDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const [theme, setTheme] = useLocalStorage(\n    \"theme\",\n    defaultDark ? \"dark\" : \"light\"\n  );\n\n  const switchTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n  };\n\n  // grabbing a new todo (text) from Form\n  const listHandler = (enteredText) => {\n    setToDoList((prev) => {\n      return [enteredText, ...prev];\n    });\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(toDoList);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setToDoList(items);\n  };\n\n  return (\n    <div className=\"container\" data-theme={theme}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <main className=\"main\">\n          <Header switchTheme={switchTheme} theme={theme} />\n          <ToDoForm onListHandler={listHandler} />\n          <ToDoList\n            toDoList={toDoList}\n            setToDoList={setToDoList}\n            status={status}\n            setStatus={setStatus}\n          />\n        </main>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n// ReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}